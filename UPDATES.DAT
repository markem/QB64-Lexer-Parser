
#	Mark Manning			Simulacron I			Thu 03/10/2016  8:45:58.23 
#	---------------------------------------------------------------------------
#	
Removed all of the printf commands and fixed the blank spaces being sent back.

#	Mark Manning			Simulacron I			Tue 03/01/2016 13:59:38.59 
#	---------------------------------------------------------------------------
#	

Added in code to bas.l to handle yylval.  Set it to be a plain character array
at this point.

Added in code to the main program to display the returning yylval values.

Added in code to bas.l to make all of the expressions handle the storage of
the incoming text into the yylval variable.

#	Mark Manning			Simulacron I			Fri 02/19/2016 12:21:05.74 
#	---------------------------------------------------------------------------
#	Release lexQB-0.2

Added in a new start state that handles strings (double
quoted strings). I do not have anything yet for single
quoted strings because I need to check to see if they
are allowed or not.  If so - it is really simple to add
them in.

I also added in a start stack to keep track of which state
I am in.  As things go along we might need to add in even
more start states so now is a good time to put this in.
All it is - is a dumb push/pull stack where we shove the
current start state off onto an integer stack (because that
is what Flex uses) or we pull the last state back off of
the stack and then we stick that into the BEGIN statement.
Strange that Flex doesn't have an END command like it has
a BEGIN statement.

Added two test cases for strings.  One is in the
INCLUDE.DAT file and the other is in the TEST.BAS file.
Nothing fancy.

;	Mark Manning			Simulacron I			Sat 01/30/2016 23:49:42.18 
;	---------------------------------------------------------------------------
;	Release : lexQB-0.1.3

Did more work on the include commands.  Made it so either the REM or single
quote(') command has to be in front of the include command.

Did a very big change - converted all of the commands over from the [aA] way
of doing it to just trying to define the commands better.  Now all of the names
are just put in as lowercase words.  The insensitive switch handles getting both
upper and lowercase versions of the commands.

At some point in the future I will need to convert this update file over to HTML
using lists instead of the comment section type layouts.  It will be clearer
that way.

;	Mark Manning			Simulacron I			Sat 01/30/2016 23:47:58.17 
;	---------------------------------------------------------------------------
;	Release : lexQB-0.1.2

Took out the old Flex commands to do includes and put in a much simpler set
of commands to handle includes.  We can now do up to 1,000 include files.

Did some work on the REM and single quote(') commands.

;	Mark Manning			Simulacron I			
;---------------------------------------------------------------------------
;	Release : lexQB-0.1.1	Sat 01/23/2016 18:53:19.19 
Made it so all command return a value.

Modified the main program so it now has a loop which is
executed until the end of the input file.  Every time
something is found it is returned along with its ENUM.
The ENUM number is then printed out.

Added in the "<=", ">=", and "<>" symbols.

--------------------------------------------------------------------------------
;	Mark Manning			Simulacron I			
;---------------------------------------------------------------------------
;	Release : lexQB-0.1		Fri 01/15/2016 10:27:37.73 

This is the first actual release of the software to the
QB64 community. (In a manner of speaking.  Maybe I should
say the first official release? Oh well, 99 years from
now no one will even remember me or think or care about
it so I'm not going to worry about it now.)


In this release I have put in the &B###, &O####, and &H####
commands.  I also had to put in something to define a
binary, octal, and hex variable (well, I already had
xdigit so I used that instead of creating a new define actually).
I tested this by putting in the following:

    a = &b012345    which gave variable, equal sign, binary number, integer number (2345)
    a = &o1234567890 which gave variable, equal sign, octal number, integer number (89)
    a = &h0123456789abcdefghijk which gave variable, equal sign, hexadecimal number, and standard variable (ghijk)

So those are working.

I also changed the string that looks for a float to just
use {float} because that already had the definition of a
float in it.

I also changed the string that looks for integer numbers
to just use {digit}+ because digit was already defined.

I also changed the PHP program (CMDS.PHP) so it auto
populates BAS.L with what it creates (rather than I do it
by hand) and also replaces the TEST.BAS file with the new
TEST.BAS information.  I got tired of doing it by hand.
There are two new lines BEFORE the lex code.  One says "DO
NOT REMOVE" the next line which says "BEGIN LEX" and two
lines after the lex code that says "END LEX" and another
"DO NOT REMOVE" comment.  The PHP script now looks for the
BEGIN and END tags, yanks out whatever is between them,
and replaces it with the new set of commands.  So DO NOT
put anything in between those two tags unless you just
like to have things deleted without notice.

Removed the LEX.DAT file and the TEST.DAT file since they
are no longer needed.

